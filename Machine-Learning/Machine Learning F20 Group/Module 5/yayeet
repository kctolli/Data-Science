{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"yayeet","provenance":[],"authorship_tag":"ABX9TyPuF93GmwAd82nMwCnBOKWh"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"VeQ93hRBhoD0","executionInfo":{"status":"ok","timestamp":1605890613424,"user_tz":420,"elapsed":453,"user":{"displayName":"Jesse Gibbons","photoUrl":"","userId":"10589876290558966709"}}},"source":["import pandas as pd\n","import tensorflow as tf\n","import numpy as np\n","import seaborn as sns\n","import matplotlib.pyplot as plt\n","import math\n","\n","\n","from tensorflow import keras\n","from tensorflow.keras import layers\n","from keras.layers import Dense\n","from tensorflow.keras.layers.experimental import preprocessing\n","from sklearn.model_selection import train_test_split\n","\n"],"execution_count":5,"outputs":[]},{"cell_type":"code","metadata":{"id":"vSpwjLFMiaRz","executionInfo":{"status":"ok","timestamp":1605890715788,"user_tz":420,"elapsed":486,"user":{"displayName":"Jesse Gibbons","photoUrl":"","userId":"10589876290558966709"}}},"source":["bikes = pd.read_csv('https://raw.githubusercontent.com/byui-cse/cse450-course/master/data/bikes.csv')\n","bikes['total_used'] = bikes.casual + bikes.registered"],"execution_count":10,"outputs":[]},{"cell_type":"code","metadata":{"id":"NTTB-mYthydy","executionInfo":{"status":"ok","timestamp":1605890717499,"user_tz":420,"elapsed":333,"user":{"displayName":"Jesse Gibbons","photoUrl":"","userId":"10589876290558966709"}}},"source":["train_dataset = bikes.sample(frac=0.8, random_state=0)\n","test_dataset = bikes.drop(train_dataset.index)\n"],"execution_count":11,"outputs":[]},{"cell_type":"code","metadata":{"id":"jPTPoro_h1DI","executionInfo":{"status":"ok","timestamp":1605890718591,"user_tz":420,"elapsed":310,"user":{"displayName":"Jesse Gibbons","photoUrl":"","userId":"10589876290558966709"}}},"source":["train_features = train_dataset.copy()\n","test_features = test_dataset.copy()\n"],"execution_count":12,"outputs":[]},{"cell_type":"code","metadata":{"id":"AvIcPKpph1Vy","executionInfo":{"status":"ok","timestamp":1605890719026,"user_tz":420,"elapsed":260,"user":{"displayName":"Jesse Gibbons","photoUrl":"","userId":"10589876290558966709"}}},"source":["train_labels = train_features.pop('total_used')\n","test_labels = test_features.pop('total_used')\n"],"execution_count":13,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":374},"id":"yzyBfhNjh5n-","executionInfo":{"status":"error","timestamp":1605890722486,"user_tz":420,"elapsed":524,"user":{"displayName":"Jesse Gibbons","photoUrl":"","userId":"10589876290558966709"}},"outputId":"f5f3b145-3f6b-4be0-80d6-1ee3df029fd9"},"source":["normalizer = preprocessing.Normalization()\n","normalizer.adapt(np.array(train_features))\n"],"execution_count":14,"outputs":[{"output_type":"error","ename":"ValueError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-14-9bd21f0f0aa4>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mnormalizer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpreprocessing\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mNormalization\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mnormalizer\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0madapt\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0marray\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtrain_features\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/base_preprocessing_layer.py\u001b[0m in \u001b[0;36madapt\u001b[0;34m(self, data, reset_state)\u001b[0m\n\u001b[1;32m    205\u001b[0m       \u001b[0;31m# until we've gotten an exception indicating that we have no more data.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    206\u001b[0m       \u001b[0;32mwhile\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 207\u001b[0;31m         \u001b[0maccumulator\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_combiner\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcompute\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata_element\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maccumulator\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    208\u001b[0m         \u001b[0mdata_element\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnext_data\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    209\u001b[0m     \u001b[0;31m# Note that this belongs to the outer indentation of 'try' - we need to\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/layers/preprocessing/normalization.py\u001b[0m in \u001b[0;36mcompute\u001b[0;34m(self, values, accumulator)\u001b[0m\n\u001b[1;32m    216\u001b[0m     \u001b[0mreduction_axes\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtuple\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0marange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mndim\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0maxis_mask\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    217\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 218\u001b[0;31m     \u001b[0mmean\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmean\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mreduction_axes\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfloat64\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    219\u001b[0m     \u001b[0mvariance\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mvar\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mreduction_axes\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfloat64\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    220\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m<__array_function__ internals>\u001b[0m in \u001b[0;36mmean\u001b[0;34m(*args, **kwargs)\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/numpy/core/fromnumeric.py\u001b[0m in \u001b[0;36mmean\u001b[0;34m(a, axis, dtype, out, keepdims)\u001b[0m\n\u001b[1;32m   3333\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3334\u001b[0m     return _methods._mean(a, axis=axis, dtype=dtype,\n\u001b[0;32m-> 3335\u001b[0;31m                           out=out, **kwargs)\n\u001b[0m\u001b[1;32m   3336\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3337\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/numpy/core/_methods.py\u001b[0m in \u001b[0;36m_mean\u001b[0;34m(a, axis, dtype, out, keepdims)\u001b[0m\n\u001b[1;32m    149\u001b[0m             \u001b[0mis_float16_result\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    150\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 151\u001b[0;31m     \u001b[0mret\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mumr_sum\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0marr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mout\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkeepdims\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    152\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mret\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmu\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mndarray\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    153\u001b[0m         ret = um.true_divide(\n","\u001b[0;31mValueError\u001b[0m: could not convert string to float: '5/28/11'"]}]},{"cell_type":"markdown","metadata":{"id":"ZJCh4nn4h8o5"},"source":["MULTIVARIABLE MODEL BEGIN\n"]},{"cell_type":"code","metadata":{"id":"vWkBG0_SiAiI","executionInfo":{"status":"aborted","timestamp":1605890614015,"user_tz":420,"elapsed":1004,"user":{"displayName":"Jesse Gibbons","photoUrl":"","userId":"10589876290558966709"}}},"source":["\n","dnn_model = keras.Sequential([\n","      normalizer, \n","      layers.Dense(15, activation='relu'),\n","      layers.Dropout(.2),\n","      layers.Dense(10, activation='relu'),\n","      layers.Dropout(.1),\n","      layers.Dense(1, activation='linear')\n","  ])\n","\n","  dnn_model.compile(loss='mean_absolute_error',\n","                optimizer=tf.keras.optimizers.Adam(0.01))\n","  dnn_model.summary()\n","\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"8oyqHlBKiDJC","executionInfo":{"status":"aborted","timestamp":1605890614016,"user_tz":420,"elapsed":1001,"user":{"displayName":"Jesse Gibbons","photoUrl":"","userId":"10589876290558966709"}}},"source":["%%time\n","history = dnn_model.fit(\n","    train_features, train_labels,\n","    validation_split=0.2,\n","    verbose=0, epochs=100)\n","\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"A7SJnYd7iGAk","executionInfo":{"status":"aborted","timestamp":1605890614017,"user_tz":420,"elapsed":997,"user":{"displayName":"Jesse Gibbons","photoUrl":"","userId":"10589876290558966709"}}},"source":["hist = pd.DataFrame(history.history)\n","hist['epoch'] = history.epoch\n","hist.tail()\n","\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"YqhE9VVgiIjW","executionInfo":{"status":"aborted","timestamp":1605890614018,"user_tz":420,"elapsed":993,"user":{"displayName":"Jesse Gibbons","photoUrl":"","userId":"10589876290558966709"}}},"source":["test_predictions = dnn_model.predict(test_features).flatten()\n","\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"DWyvNk_liKj7","executionInfo":{"status":"aborted","timestamp":1605890614019,"user_tz":420,"elapsed":987,"user":{"displayName":"Jesse Gibbons","photoUrl":"","userId":"10589876290558966709"}}},"source":["a = plt.axes(aspect='equal')\n","plt.scatter(test_labels, test_predictions)\n","plt.xlabel('True Values')\n","plt.ylabel('Predictions')\n","lims = [0, 200]\n","plt.xlim(lims)\n","plt.ylim(lims)\n","_ = plt.plot(lims, lims)\n","\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"FJjyBC3eiNEY","executionInfo":{"status":"aborted","timestamp":1605890614020,"user_tz":420,"elapsed":981,"user":{"displayName":"Jesse Gibbons","photoUrl":"","userId":"10589876290558966709"}}},"source":["error = test_predictions - test_labels\n","plt.hist(error, bins=25)\n","plt.xlabel('Prediction Error')\n","_ = plt.ylabel('Count')\n","\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"cU45hWMtiP2C"},"source":["\n","TODO: abs value the error, so that it can adjust a total value off, and not have the positivies help out the negatives"]},{"cell_type":"code","metadata":{"id":"qNnZiUMviRv6","executionInfo":{"status":"aborted","timestamp":1605890614021,"user_tz":420,"elapsed":976,"user":{"displayName":"Jesse Gibbons","photoUrl":"","userId":"10589876290558966709"}}},"source":["avg = error.sum()\n","print((avg/len(error)))"],"execution_count":null,"outputs":[]}]}