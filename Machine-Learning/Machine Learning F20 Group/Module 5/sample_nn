{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"sample_nn","provenance":[],"authorship_tag":"ABX9TyNgWVaGEUj6fTtz8dbdx20a"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"-Qpn2SAnqxYB"},"source":["#import code"]},{"cell_type":"code","metadata":{"id":"XSrl13SzjOQD","executionInfo":{"status":"ok","timestamp":1605893121256,"user_tz":420,"elapsed":3275,"user":{"displayName":"Jesse Gibbons","photoUrl":"","userId":"10589876290558966709"}}},"source":["import pandas as pd\n","import tensorflow as tf\n","import numpy as np\n","from tensorflow import keras\n","from tensorflow.keras import layers\n","from keras.layers import Dense\n","from tensorflow.keras.layers.experimental import preprocessing\n","from sklearn.model_selection import train_test_split\n","import matplotlib.pyplot as plt"],"execution_count":1,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"t0Za2fotq0-B"},"source":["#Data Manipulation"]},{"cell_type":"code","metadata":{"id":"8kEJhQ2ZkIJd","executionInfo":{"status":"ok","timestamp":1605893121873,"user_tz":420,"elapsed":3884,"user":{"displayName":"Jesse Gibbons","photoUrl":"","userId":"10589876290558966709"}}},"source":["bikes = pd.read_csv('https://raw.githubusercontent.com/byui-cse/cse450-course/master/data/bikes.csv')"],"execution_count":2,"outputs":[]},{"cell_type":"code","metadata":{"id":"mtKUp2SHkJZz","executionInfo":{"status":"ok","timestamp":1605893121875,"user_tz":420,"elapsed":3881,"user":{"displayName":"Jesse Gibbons","photoUrl":"","userId":"10589876290558966709"}}},"source":["bikes['dteday'] = pd.Categorical(bikes['dteday'])"],"execution_count":3,"outputs":[]},{"cell_type":"code","metadata":{"id":"qoTkZbpekN7z","executionInfo":{"status":"ok","timestamp":1605893121876,"user_tz":420,"elapsed":3877,"user":{"displayName":"Jesse Gibbons","photoUrl":"","userId":"10589876290558966709"}}},"source":["bikes['total_used'] = bikes['casual'] + bikes['registered']"],"execution_count":4,"outputs":[]},{"cell_type":"code","metadata":{"id":"hOaW4OOKkOwu","executionInfo":{"status":"ok","timestamp":1605893121878,"user_tz":420,"elapsed":3873,"user":{"displayName":"Jesse Gibbons","photoUrl":"","userId":"10589876290558966709"}}},"source":["bikes['total_used'].describe()\n","features = ['season','hr','holiday','workingday','weathersit','hum','windspeed','temp_c', 'feels_like_c']"],"execution_count":5,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FrzUzqr6kPbO","executionInfo":{"status":"ok","timestamp":1605893121880,"user_tz":420,"elapsed":3870,"user":{"displayName":"Jesse Gibbons","photoUrl":"","userId":"10589876290558966709"}},"outputId":"4964a91f-f8a8-439a-d690-46a84829fe65"},"source":["bikes = bikes.dropna()\n","bikes.pop('dteday')"],"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0          1/1/11\n","1          1/1/11\n","2          1/1/11\n","3          1/1/11\n","4          1/1/11\n","           ...   \n","17374    12/31/12\n","17375    12/31/12\n","17376    12/31/12\n","17377    12/31/12\n","17378    12/31/12\n","Name: dteday, Length: 17379, dtype: category\n","Categories (731, object): ['1/1/11', '1/1/12', '1/10/11', '1/10/12', ..., '9/8/11', '9/8/12',\n","                           '9/9/11', '9/9/12']"]},"metadata":{"tags":[]},"execution_count":6}]},{"cell_type":"code","metadata":{"id":"O1f2EKCnkP6a","executionInfo":{"status":"ok","timestamp":1605893121881,"user_tz":420,"elapsed":3866,"user":{"displayName":"Jesse Gibbons","photoUrl":"","userId":"10589876290558966709"}}},"source":["train_dataset = bikes.sample(frac=0.8, random_state=0)\n","test_dataset = bikes.drop(train_dataset.index)"],"execution_count":7,"outputs":[]},{"cell_type":"code","metadata":{"id":"rn3EcdsNkQVH","executionInfo":{"status":"ok","timestamp":1605893122120,"user_tz":420,"elapsed":4100,"user":{"displayName":"Jesse Gibbons","photoUrl":"","userId":"10589876290558966709"}}},"source":["train_features = train_dataset.copy()\n","test_features = test_dataset.copy()"],"execution_count":8,"outputs":[]},{"cell_type":"code","metadata":{"id":"Ku68zQ8wkQ6B","executionInfo":{"status":"ok","timestamp":1605893122121,"user_tz":420,"elapsed":4096,"user":{"displayName":"Jesse Gibbons","photoUrl":"","userId":"10589876290558966709"}}},"source":["train_labels = train_features.pop('total_used')\n","test_labels = test_features.pop('total_used')"],"execution_count":9,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"-4tJpTYPq-vp"},"source":["#Training the Neural Network"]},{"cell_type":"code","metadata":{"id":"lkYuv4c6kRac","executionInfo":{"status":"ok","timestamp":1605893122122,"user_tz":420,"elapsed":4091,"user":{"displayName":"Jesse Gibbons","photoUrl":"","userId":"10589876290558966709"}}},"source":["normalizer = preprocessing.Normalization()\n","normalizer.adapt(np.array(train_features))"],"execution_count":10,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1zMXEo04kSWN","executionInfo":{"status":"ok","timestamp":1605893122123,"user_tz":420,"elapsed":4085,"user":{"displayName":"Jesse Gibbons","photoUrl":"","userId":"10589876290558966709"}},"outputId":"ecb77dff-f3aa-4f55-becc-f1aec70e9b69"},"source":["print(normalizer.mean.numpy())"],"execution_count":11,"outputs":[{"output_type":"stream","text":["[8.7194072e+03 8.7204072e+03 2.5024095e+00 1.1567360e+01 2.8698841e-02\n"," 6.8229878e-01 1.4305545e+00 6.2888151e-01 1.2732504e+01 1.5346590e+01\n"," 1.5389231e+01 3.5711861e+01 1.5444084e+02]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"r4Y4vPRjkSwi","executionInfo":{"status":"ok","timestamp":1605893122124,"user_tz":420,"elapsed":4081,"user":{"displayName":"Jesse Gibbons","photoUrl":"","userId":"10589876290558966709"}}},"source":["first = np.array(train_features[:1])"],"execution_count":12,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ffNUSNW6kTCR","executionInfo":{"status":"ok","timestamp":1605893122125,"user_tz":420,"elapsed":4077,"user":{"displayName":"Jesse Gibbons","photoUrl":"","userId":"10589876290558966709"}},"outputId":"25b9eeac-7730-4dac-f0a2-7b00c23a6949"},"source":["with np.printoptions(precision=2, suppress=True):\n","  print('First example:', first)\n","  print()\n","  print('Normalized:', normalizer(first).numpy())"],"execution_count":13,"outputs":[{"output_type":"stream","text":["First example: [[3439.   3440.      2.      5.      0.      0.      1.      0.88   15.\n","    18.32   19.      4.      3.  ]]\n","\n","Normalized: [[-1.06 -1.06 -0.45 -0.95 -0.17 -1.47 -0.67  1.3   0.28  0.33  0.32 -0.64\n","  -1.  ]]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"0RgnX1QskTcd","executionInfo":{"status":"ok","timestamp":1605893122128,"user_tz":420,"elapsed":4071,"user":{"displayName":"Jesse Gibbons","photoUrl":"","userId":"10589876290558966709"}}},"source":["temp_c = np.array(train_features['temp_c'])\n","temp_normalizer = preprocessing.Normalization(input_shape=[1,])\n","temp_normalizer.adapt(temp_c)"],"execution_count":14,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"R2UGof-GrE2v"},"source":["##RELU"]},{"cell_type":"code","metadata":{"id":"Aw3M02PQkUCL","executionInfo":{"status":"ok","timestamp":1605893122128,"user_tz":420,"elapsed":4066,"user":{"displayName":"Jesse Gibbons","photoUrl":"","userId":"10589876290558966709"}}},"source":["temp_model = tf.keras.Sequential([\n","    temp_normalizer,\n","    layers.Dense(10, activation='relu'),\n","    layers.Dense(10, activation='relu'),\n","    layers.Dense(units=1)\n","])"],"execution_count":15,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uO4mmo0skUlb","executionInfo":{"status":"ok","timestamp":1605893122129,"user_tz":420,"elapsed":4062,"user":{"displayName":"Jesse Gibbons","photoUrl":"","userId":"10589876290558966709"}},"outputId":"48922405-f84c-4306-8b0f-d7a6f25d0244"},"source":["temp_model.summary()"],"execution_count":16,"outputs":[{"output_type":"stream","text":["Model: \"sequential\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","normalization_1 (Normalizati (None, 1)                 3         \n","_________________________________________________________________\n","dense (Dense)                (None, 10)                20        \n","_________________________________________________________________\n","dense_1 (Dense)              (None, 10)                110       \n","_________________________________________________________________\n","dense_2 (Dense)              (None, 1)                 11        \n","=================================================================\n","Total params: 144\n","Trainable params: 141\n","Non-trainable params: 3\n","_________________________________________________________________\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GrFdTIMzkVDD","executionInfo":{"status":"ok","timestamp":1605893122337,"user_tz":420,"elapsed":4265,"user":{"displayName":"Jesse Gibbons","photoUrl":"","userId":"10589876290558966709"}},"outputId":"ad541f95-1d4c-4a9b-d089-18b3d2c3151b"},"source":["temp_model.predict(temp_c[:10])"],"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 0.03770896],\n","       [-0.04401507],\n","       [-0.04401507],\n","       [-0.18365695],\n","       [ 0.09731466],\n","       [-0.12159389],\n","       [-0.1526254 ],\n","       [ 0.12115692],\n","       [ 0.00194555],\n","       [-0.12159389]], dtype=float32)"]},"metadata":{"tags":[]},"execution_count":17}]},{"cell_type":"code","metadata":{"id":"-pMEyPvqkVW5","executionInfo":{"status":"ok","timestamp":1605893122337,"user_tz":420,"elapsed":4260,"user":{"displayName":"Jesse Gibbons","photoUrl":"","userId":"10589876290558966709"}}},"source":["temp_model.compile(\n","    optimizer=tf.optimizers.Adam(learning_rate=0.1),\n","    loss='mean_absolute_error')"],"execution_count":18,"outputs":[]},{"cell_type":"code","metadata":{"id":"7oRgZhnwkVvN","executionInfo":{"status":"ok","timestamp":1605893139171,"user_tz":420,"elapsed":21089,"user":{"displayName":"Jesse Gibbons","photoUrl":"","userId":"10589876290558966709"}}},"source":["history = temp_model.fit(\n","    train_features['temp_c'], train_labels,\n","    epochs=50,\n","    # suppress logging\n","    verbose=0,\n","    # Calculate validation results on 20% of the training data\n","    validation_split = 0.2)"],"execution_count":19,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":191},"id":"odNorIsokWXO","executionInfo":{"status":"ok","timestamp":1605893139176,"user_tz":420,"elapsed":21088,"user":{"displayName":"Jesse Gibbons","photoUrl":"","userId":"10589876290558966709"}},"outputId":"814ad933-9047-46e4-9aa5-d49a2f36e510"},"source":["hist = pd.DataFrame(history.history)\n","hist['epoch'] = history.epoch\n","hist.tail()"],"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>loss</th>\n","      <th>val_loss</th>\n","      <th>epoch</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>45</th>\n","      <td>121.514107</td>\n","      <td>125.752846</td>\n","      <td>45</td>\n","    </tr>\n","    <tr>\n","      <th>46</th>\n","      <td>121.434143</td>\n","      <td>126.396767</td>\n","      <td>46</td>\n","    </tr>\n","    <tr>\n","      <th>47</th>\n","      <td>121.436150</td>\n","      <td>125.892258</td>\n","      <td>47</td>\n","    </tr>\n","    <tr>\n","      <th>48</th>\n","      <td>121.722000</td>\n","      <td>125.823952</td>\n","      <td>48</td>\n","    </tr>\n","    <tr>\n","      <th>49</th>\n","      <td>121.365952</td>\n","      <td>127.385864</td>\n","      <td>49</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["          loss    val_loss  epoch\n","45  121.514107  125.752846     45\n","46  121.434143  126.396767     46\n","47  121.436150  125.892258     47\n","48  121.722000  125.823952     48\n","49  121.365952  127.385864     49"]},"metadata":{"tags":[]},"execution_count":20}]},{"cell_type":"markdown","metadata":{"id":"nFhqtjc4rK94"},"source":["##ELU"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"eX_gyow0lRnJ","executionInfo":{"status":"ok","timestamp":1605893139177,"user_tz":420,"elapsed":21081,"user":{"displayName":"Jesse Gibbons","photoUrl":"","userId":"10589876290558966709"}},"outputId":"215e8141-1e22-47b1-b75b-dbbc384e6dbc"},"source":["dnn_model = keras.Sequential([\n","      normalizer,\n","      layers.Dense(3, activation='elu'),\n","      layers.Dense(3, activation='elu'),\n","      layers.Dense(1)\n","  ])\n","dnn_model.compile(loss='mean_absolute_error',\n","                  optimizer=tf.keras.optimizers.Adam(0.001))\n","dnn_model.summary()\n"],"execution_count":21,"outputs":[{"output_type":"stream","text":["Model: \"sequential_1\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","normalization (Normalization (None, 13)                27        \n","_________________________________________________________________\n","dense_3 (Dense)              (None, 3)                 42        \n","_________________________________________________________________\n","dense_4 (Dense)              (None, 3)                 12        \n","_________________________________________________________________\n","dense_5 (Dense)              (None, 1)                 4         \n","=================================================================\n","Total params: 85\n","Trainable params: 58\n","Non-trainable params: 27\n","_________________________________________________________________\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":315},"id":"Agk_Yr1hlul5","executionInfo":{"status":"ok","timestamp":1605893149275,"user_tz":420,"elapsed":31173,"user":{"displayName":"Jesse Gibbons","photoUrl":"","userId":"10589876290558966709"}},"outputId":"ca79a2d3-36c5-4ad8-e75f-fc354b7d7c50"},"source":["%%time\n","history = dnn_model.fit(\n","    train_features, train_labels,\n","    validation_split=0.2,\n","    verbose=0, epochs=30)\n","hist = pd.DataFrame(history.history)\n","hist['epoch'] = history.epoch\n","hist.tail()\n","test_predictions = dnn_model.predict(test_features).flatten()\n","a = plt.axes(aspect='equal')\n","plt.scatter(test_labels, test_predictions)\n","plt.xlabel('True Values')\n","plt.ylabel('Predictions')\n","lims = [0, 50]\n","plt.xlim(lims)\n","plt.ylim(lims)\n","_ = plt.plot(lims, lims)\n","error = test_predictions - test_labels\n","plt.hist(error, bins=25)\n","plt.xlabel('Prediction Error')\n","_ = plt.ylabel('Count')"],"execution_count":22,"outputs":[{"output_type":"stream","text":["CPU times: user 12.1 s, sys: 1.02 s, total: 13.1 s\n","Wall time: 9.8 s\n"],"name":"stdout"},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"gCOP0D_Olsd6","executionInfo":{"status":"ok","timestamp":1605893149276,"user_tz":420,"elapsed":31167,"user":{"displayName":"Jesse Gibbons","photoUrl":"","userId":"10589876290558966709"}}},"source":["train_features = train_dataset.copy()\n","train_labels = train_features.pop('total_used')\n","normalizer = preprocessing.Normalization()\n","normalizer.adapt(np.array(train_features))"],"execution_count":23,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mKtc2p9Jl9k1","executionInfo":{"status":"ok","timestamp":1605893149277,"user_tz":420,"elapsed":31163,"user":{"displayName":"Jesse Gibbons","photoUrl":"","userId":"10589876290558966709"}},"outputId":"2acf83f1-d2a5-432a-ad6c-57a86970d2b9"},"source":["dnn_model = keras.Sequential([\n","      normalizer,\n","      layers.Dense(15, activation='relu'),\n","      layers.Dropout(.2),\n","      layers.Dense(10, activation='relu'),\n","      layers.Dropout(.1),\n","      layers.Dense(1, activation='linear')\n","  ])\n","dnn_model.compile(loss='mean_absolute_error',\n","                  optimizer=tf.keras.optimizers.Adam(0.01))\n","dnn_model.summary()\n"],"execution_count":24,"outputs":[{"output_type":"stream","text":["Model: \"sequential_2\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","normalization_2 (Normalizati (None, 13)                27        \n","_________________________________________________________________\n","dense_6 (Dense)              (None, 15)                210       \n","_________________________________________________________________\n","dropout (Dropout)            (None, 15)                0         \n","_________________________________________________________________\n","dense_7 (Dense)              (None, 10)                160       \n","_________________________________________________________________\n","dropout_1 (Dropout)          (None, 10)                0         \n","_________________________________________________________________\n","dense_8 (Dense)              (None, 1)                 11        \n","=================================================================\n","Total params: 408\n","Trainable params: 381\n","Non-trainable params: 27\n","_________________________________________________________________\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XPnVH-j9mN81","executionInfo":{"status":"ok","timestamp":1605893185427,"user_tz":420,"elapsed":67308,"user":{"displayName":"Jesse Gibbons","photoUrl":"","userId":"10589876290558966709"}},"outputId":"3852dd3e-4452-4561-a613-c22b371cd7b5"},"source":["%%time\n","history = dnn_model.fit(\n","    train_features, train_labels,\n","    validation_split=0.2,\n","    verbose=0, epochs=100)\n"],"execution_count":25,"outputs":[{"output_type":"stream","text":["CPU times: user 46.6 s, sys: 4.78 s, total: 51.4 s\n","Wall time: 36 s\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":191},"id":"L8yAYZKnmRKZ","executionInfo":{"status":"ok","timestamp":1605893185430,"user_tz":420,"elapsed":67302,"user":{"displayName":"Jesse Gibbons","photoUrl":"","userId":"10589876290558966709"}},"outputId":"cd4dd438-215c-4ba9-f510-1574faa07e38"},"source":["hist = pd.DataFrame(history.history)\n","hist['epoch'] = history.epoch\n","hist.tail()\n"],"execution_count":26,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>loss</th>\n","      <th>val_loss</th>\n","      <th>epoch</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>95</th>\n","      <td>22.946692</td>\n","      <td>8.077569</td>\n","      <td>95</td>\n","    </tr>\n","    <tr>\n","      <th>96</th>\n","      <td>23.230986</td>\n","      <td>3.708116</td>\n","      <td>96</td>\n","    </tr>\n","    <tr>\n","      <th>97</th>\n","      <td>22.845112</td>\n","      <td>11.101895</td>\n","      <td>97</td>\n","    </tr>\n","    <tr>\n","      <th>98</th>\n","      <td>23.104931</td>\n","      <td>6.830325</td>\n","      <td>98</td>\n","    </tr>\n","    <tr>\n","      <th>99</th>\n","      <td>22.654713</td>\n","      <td>13.324265</td>\n","      <td>99</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["         loss   val_loss  epoch\n","95  22.946692   8.077569     95\n","96  23.230986   3.708116     96\n","97  22.845112  11.101895     97\n","98  23.104931   6.830325     98\n","99  22.654713  13.324265     99"]},"metadata":{"tags":[]},"execution_count":26}]},{"cell_type":"code","metadata":{"id":"q_4NyKKJmR7H","executionInfo":{"status":"ok","timestamp":1605893185431,"user_tz":420,"elapsed":67296,"user":{"displayName":"Jesse Gibbons","photoUrl":"","userId":"10589876290558966709"}}},"source":["test_predictions = dnn_model.predict(test_features).flatten()\n"],"execution_count":27,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":282},"id":"pl4WAn8DmSVO","executionInfo":{"status":"ok","timestamp":1605893185655,"user_tz":420,"elapsed":67513,"user":{"displayName":"Jesse Gibbons","photoUrl":"","userId":"10589876290558966709"}},"outputId":"25100b40-defd-4f55-9fec-a2384c886dd5"},"source":["a = plt.axes(aspect='equal')\n","plt.scatter(test_labels, test_predictions)\n","plt.xlabel('True Values')\n","plt.ylabel('Predictions')\n","lims = [0, 200]\n","plt.xlim(lims)\n","plt.ylim(lims)\n","_ = plt.plot(lims, lims)\n"],"execution_count":28,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":278},"id":"BKAhmirCmTAm","executionInfo":{"status":"ok","timestamp":1605893185887,"user_tz":420,"elapsed":67737,"user":{"displayName":"Jesse Gibbons","photoUrl":"","userId":"10589876290558966709"}},"outputId":"d0c500a1-f7ab-426f-83de-646fbf0d291f"},"source":["error = test_predictions - test_labels\n","plt.hist(error, bins=25)\n","plt.xlabel('Prediction Error')\n","_ = plt.ylabel('Count')\n"],"execution_count":29,"outputs":[{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"J0XosOugmTdP"},"source":["TODO: abs value the error, so that it can adjust a total value off, and not have the positivies help out the negatives\n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7Mz0Q1oJrWtR","executionInfo":{"status":"ok","timestamp":1605893186117,"user_tz":420,"elapsed":67959,"user":{"displayName":"Jesse Gibbons","photoUrl":"","userId":"10589876290558966709"}},"outputId":"521781db-ae84-450a-ffdf-6f219d901918"},"source":["avg = error.sum()\n","print((avg/len(error)))"],"execution_count":30,"outputs":[{"output_type":"stream","text":["-9.21478439611999\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"0ACaejXUreqg","executionInfo":{"status":"ok","timestamp":1605893186118,"user_tz":420,"elapsed":67958,"user":{"displayName":"Jesse Gibbons","photoUrl":"","userId":"10589876290558966709"}}},"source":[""],"execution_count":30,"outputs":[]}]}